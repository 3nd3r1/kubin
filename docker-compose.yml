---
services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: kubin-postgres
    environment:
      POSTGRES_DB: kubin
      POSTGRES_USER: kubin
      POSTGRES_PASSWORD: kubin
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kubin -d kubin"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - kubin-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kubin-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - kubin-network

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: kubin-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DOMAIN: localhost
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 3s
      timeout: 10s
      retries: 5
    networks:
      - kubin-network

  minio-init:
    image: minio/mc:latest
    container_name: kubin-minio-init
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./scripts/init-minio.sh:/init-minio.sh
    entrypoint: /init-minio.sh
    networks:
      - kubin-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  kubin-network:
    driver: bridge
